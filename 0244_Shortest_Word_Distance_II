class WordDistance {
    Map<String, List<Integer>> map;
    
    public WordDistance(String[] wordsDict) {
        map = new HashMap<>();
        for(int i = 0; i < wordsDict.length; i++) {
            String word = wordsDict[i];
            if(!map.containsKey(word)) {
                map.put(word, new ArrayList<>());
            }
            map.get(word).add(i);
        }
    }
    
    public int shortest(String word1, String word2) {
        List<Integer> list1 = map.get(word1);
        List<Integer> list2 = map.get(word2);
        int index1 = 0, index2 = 0, minDist = Integer.MAX_VALUE;
        while(index1 < list1.size() && index2 < list2.size()) {
            minDist = Math.min(minDist, Math.abs(list1.get(index1) - list2.get(index2)));
            if(list1.get(index1) < list2.get(index2)) {
                index1 += 1;
            } else {
                index2 += 1;
            }
        }
        return minDist;
    }
}

/**
 * Your WordDistance object will be instantiated and called as such:
 * WordDistance obj = new WordDistance(wordsDict);
 * int param_1 = obj.shortest(word1,word2);
 */
