class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        Deque<Integer> deque = new ArrayDeque<>();
        for (int i = 0; i < k; i++) {
            while (!deque.isEmpty() && nums[i] > nums[deque.getLast()]) {
                deque.pollLast();
            }
            deque.addLast(i);
        }
        int[] ans = new int[nums.length - k + 1];
        for (int i = 0; i < ans.length; i++) {
            ans[i] = nums[deque.getFirst()];
            if (i == deque.getFirst()) {
                deque.pollFirst();
            }
            int next = i + k;
            if (next < nums.length) {
                while (!deque.isEmpty() && nums[next] > nums[deque.getLast()]) {
                    deque.pollLast();
                }
                deque.addLast(next);
            }
        }
        return ans;
    }
}
