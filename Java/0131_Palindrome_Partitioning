class Solution {
    private boolean isPalindrome(String s,int i, int j){
        while(i<j){
            if(s.charAt(i)!=s.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }
    
    private void helper(String s, int index, List<List<String>> ans, List<String> pre) {
        if (index == s.length()) {
            ans.add(new ArrayList<String>(pre));
        }
        for (int i = index; i < s.length(); i++) {
            if (isPalindrome(s, index, i)) {
                pre.add(s.substring(index, i + 1));
                helper(s, i + 1, ans, pre);
                pre.remove(pre.size() - 1);
            }
        }
    }
    
    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        helper(s, 0, ans, new ArrayList<>());
        return ans;
    }
}
