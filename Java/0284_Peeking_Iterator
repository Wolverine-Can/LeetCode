// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html

class PeekingIterator implements Iterator<Integer> {
    Iterator<Integer> iter;
    Integer peekVal;
	public PeekingIterator(Iterator<Integer> iterator) {
	    iter = iterator;
        peekVal = null;
	    if (iter.hasNext()) {
            peekVal = iter.next();
        }
	}
	
    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
        return peekVal;
	}
	
	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
        Integer toReturn = peekVal;
        peekVal = iter.hasNext() ? iter.next() : null;
	    return toReturn;
	}
	
	@Override
	public boolean hasNext() {
	    return peekVal != null;
	}
}
