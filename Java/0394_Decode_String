class Solution {
    public String decodeString(String s) {
        StringBuilder res = new StringBuilder();
        Stack<StringBuilder> strStack = new Stack<>();
        Stack<Integer> numStack = new Stack<>();
        strStack.push(res);
        int index = 0;
        while(index < s.length()) {
            char c = s.charAt(index);
            if(c >= '0' && c <= '9') {
                int right = index + 1;
                while(s.charAt(right) >= '0' && s.charAt(right) <= '9') {
                    right += 1;
                }
                numStack.push(Integer.parseInt(s.substring(index, right)));
                index = right - 1;
            } else if (c == '[') {
                strStack.push(new StringBuilder());
            } else if (c == ']') {
                String str = strStack.pop().toString();
                StringBuilder sb = strStack.peek();
                int num = numStack.pop();
                for(int i = 0; i < num; i++) {
                    sb.append(str);
                }
            } else {
                StringBuilder sb = strStack.peek();
                sb.append(c);
            }
            index += 1;
        }
        return strStack.pop().toString();
    }
}
