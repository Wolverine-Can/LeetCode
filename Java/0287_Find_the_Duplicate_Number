// binary search ans
class Solution {
    private boolean ansLessThanMid(int[] nums, int mid) {
        int smallerNumberAmount = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] < mid) {
                smallerNumberAmount += 1;
            }
        }
        return smallerNumberAmount > mid - 1? true : false;
    }
    
    public int findDuplicate(int[] nums) {
        int left = 1, right = nums.length - 1;
        while (left + 1 < right) {
            int mid = left + (right - left) / 2;
            if (ansLessThanMid(nums, mid)) {
                right = mid;
            } else {
                left = mid;
            }
        }
        if (ansLessThanMid(nums, right)) {
            return left;
        } else {
            return right;
        }
    }
}
