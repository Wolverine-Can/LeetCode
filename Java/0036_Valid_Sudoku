class Solution {
    public boolean isValidSudoku(char[][] board) {
        List<Set<Character>> rows = new ArrayList<>();
        List<Set<Character>> cols = new ArrayList<>();
        List<Set<Character>> blocks = new ArrayList<>();
        for (int i = 0; i < 9; i++) {
            rows.add(new HashSet<>());
            cols.add(new HashSet<>());
            blocks.add(new HashSet<>());
        }
        for (int m = 0; m < 9; m++) {
            for (int n = 0; n < 9; n++) {
                char ch = board[m][n];
                if (ch == '.') {
                    continue;
                }
                if (rows.get(m).contains(ch) || cols.get(n).contains(ch) || blocks.get((m / 3) * 3 + n / 3).contains(ch)) {
                    return false;
                }
                rows.get(m).add(ch);
                cols.get(n).add(ch);
                blocks.get((m / 3) * 3 + n / 3).add(ch);
            }
        }
        return true;
    }
}
