/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if (headA == null || headB == null) {
            return null;
        }
        ListNode pA = headA, pB = headB, preA = null, preB = null, tailA = null, tailB = null;
        while (true) {
            while (pA != null && pB != null) {
                if (pA == pB) {
                    return pA;
                }
                preA = pA;
                pA = pA.next;
                preB = pB;
                pB = pB.next;
            }
            if (pA == null) {
                pA = headB;
                tailA = preA;
            }
            if (pB == null) {
                pB = headA;
                tailB = preB;
            }
            if (tailA != null && tailB != null && tailA != tailB) {
                return null;
            }
        }
    }
}
