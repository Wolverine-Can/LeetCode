// DP
class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        Map<Integer, Boolean> isPossible = new HashMap<>();
        int maxLength = 0;
        for (String str : wordDict) {
            if (str.length() > maxLength)
                maxLength = str.length();
        }
        isPossible.put(s.length(), true);
        for (int i = s.length() - 1; i >= 0; i--) {
            for (int j = i + 1; j - i <= maxLength && j <= s.length(); j++) {
                if (wordDict.contains(s.substring(i, j)) && isPossible.get(j))
                    isPossible.put(i, true);
            }
            if (!isPossible.containsKey(i))
                isPossible.put(i, false);
        }
        return isPossible.get(0);
    }
}
