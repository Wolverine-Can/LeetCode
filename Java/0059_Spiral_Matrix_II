class Solution {
    private boolean outOfbounds(int[][] matrix, int x, int y) {
        int row = matrix.length, col = matrix[0].length;
        return x < 0 || x >= col || y < 0 || y >= row;
    }
    
    public int[][] generateMatrix(int n) {
        int[][] matrix = new int[n][n];
        if (n == 0) {
            return new int[0][0];
        }
        int number = n * n;
        boolean[][] seen = new boolean[matrix.length][matrix[0].length];
        int[] dx = new int[] {1, 0, -1, 0};
        int[] dy = new int[] {0, 1, 0, -1};
        int x = 0, y = 0, dir = 0;
        for (int i = 1; i <= number; i++) {
            matrix[y][x] = i;
            seen[y][x] = true;
            int nextX = x + dx[dir];
            int nextY = y + dy[dir];
            if (outOfbounds(matrix, nextX, nextY) || seen[nextY][nextX]) {
                dir = (dir + 1) % 4;
                x += dx[dir];
                y += dy[dir];
                continue;
            } else {
                x = nextX;
                y = nextY;
            }
        }
        return matrix;
    }
}
