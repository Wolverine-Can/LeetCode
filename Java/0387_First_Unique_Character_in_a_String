// HashMap + List
class Solution {
    private class charNode {
        private charNode prev;
        private charNode next;
        private int index;
        private charNode(int index) {
            this.index = index;
        }
    }
    
    public int firstUniqChar(String s) {
        charNode sentinelFirst = new charNode(-1);
        charNode sentinelLast = new charNode(-1);
        sentinelFirst.next = sentinelLast;
        sentinelLast.prev = sentinelFirst;
        Map<Character, charNode> map = new HashMap<>();
        Set<Character> candidates = new HashSet<>();
        Set<Character> notUniq = new HashSet<>();
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (notUniq.contains(c))
                continue;
            else if (candidates.contains(c)) {
                candidates.remove(c);
                notUniq.add(c);
                charNode node = map.get(c);
                node.prev.next = node.next;
                node.next.prev = node.prev;
            } else {
                candidates.add(c);
                charNode node = new charNode(i);
                sentinelLast.prev.next = node;
                node.prev = sentinelLast.prev;
                node.next = sentinelLast;
                sentinelLast.prev = node;
                map.put(c, node);
            }
        }
        return sentinelFirst.next.index;
    }
}
