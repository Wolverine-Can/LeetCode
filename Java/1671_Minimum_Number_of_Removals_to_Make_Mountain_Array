class Solution {
    public int minimumMountainRemovals(int[] nums) {
        int N = nums.length;
        int[] left = new int[N], right = new int[N];
        for (int i = 1; i < N - 1; i++) {
            int max = 0;
            for (int j = i - 1; j >= 0; j--) {
                if (nums[i] > nums[j]) {
                    max = Math.max(max, left[j]);
                    left[i] = max + 1;
                }
            }
        }
        for (int i = N - 2; i > 0; i--) {
            int max = 0;
            for (int j = i + 1; j < N; j++) {
                if (nums[i] > nums[j]) {
                    max = Math.max(max, right[j]);
                    right[i] = max + 1;
                }
            }
        }
        for (int i = 0; i < N; i++) {
            System.out.println(left[i]);
        }
        int max = 0;
        for (int i = 1; i < N - 1; i++) {
            if (left[i] * right[i] == 0) {
                continue;
            }
            max = Math.max(max, left[i] + right[i] + 1);
        }
        return N - max;
    }
}
