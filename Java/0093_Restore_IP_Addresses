class Solution {
    private String toIP(List<String> lst) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < 3; i++) {
            sb.append(lst.get(i));
            sb.append(".");
        }
        sb.append(lst.get(3));
        return sb.toString();
    }
    
    private void dfs(String s, List<String> res, int index, ArrayList<String> pre) {
        if (index == s.length()) {
            if (pre.size() == 4) {
                res.add(toIP(pre));
            }
            return;
        }
        if (pre.size() == 4) {
            return;
        }
        for (int i = index; i < index + 3 && i < s.length(); i++) {
            String numStr = s.substring(index, i + 1);
            int num = Integer.parseInt(numStr);
            if (numStr.length() > 1 && numStr.charAt(0) == '0') {
                continue;
            }
            if (num >= 0 && num <= 255) {
                pre.add(numStr);
                dfs(s, res, i + 1, pre);
                pre.remove(pre.size() - 1);
            } 
        }
    }
                                       
    public List<String> restoreIpAddresses(String s) {
        List<String> res = new ArrayList<>();
        dfs(s, res, 0, new ArrayList<String>());
        return res;
    }
}
