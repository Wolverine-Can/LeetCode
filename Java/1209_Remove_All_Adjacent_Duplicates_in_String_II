class Solution {
    public String removeDuplicates(String s, int k) {
        Stack<Pair<Character, Integer>> stack = new Stack<>();
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (stack.isEmpty() || !(stack.peek().getKey() == c)) {
                stack.push(new Pair(c, 1));
            } else {
                Pair<Character, Integer> p = stack.pop();
                if (p.getValue() < k - 1) {
                    stack.push(new Pair(c, p.getValue() + 1));
                }
            }
        }
        StringBuilder sb = new StringBuilder();
        while (!stack.isEmpty()) {
            Pair<Character, Integer> p = stack.pop();
            int count = p.getValue();
            while (count-- > 0) {
                sb.insert(0, p.getKey());
            }
            
        }
        return sb.toString();
    }
}
